# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

diff --git a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_storage_bucket.go b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_storage_bucket.go
index 863f9e6e0..d4e120e7d 100644
--- a/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_storage_bucket.go
+++ b/third_party/github.com/hashicorp/terraform-provider-google-beta/google-beta/resource_storage_bucket.go
@@ -750,14 +750,7 @@ func resourceStorageBucketRead(d *schema.ResourceData, meta interface{}) error {
 	// Get the bucket and acl
 	bucket := d.Get("name").(string)
 
-	var res *storage.Bucket
-	// There seems to be some eventual consistency errors in some cases, so we want to check a few times
-	// to make sure it exists before moving on
-	err = RetryTimeDuration(func() (operr error) {
-		var retryErr error
-		res, retryErr = config.NewStorageClient(userAgent).Buckets.Get(bucket).Do()
-		return retryErr
-	}, d.Timeout(schema.TimeoutRead), isNotFoundRetryableError("bucket read"))
+	res, err := config.NewStorageClient(userAgent).Buckets.Get(bucket).Do()
 
 	if err != nil {
 		return handleNotFoundError(err, d, fmt.Sprintf("Storage Bucket %q", d.Get("name").(string)))
